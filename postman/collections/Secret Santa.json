{
	"info": {
		"_postman_id": "c851c977-7d66-4341-b132-bbe34fa39238",
		"name": "Secret Santa",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_uid": "23365433-c851c977-7d66-4341-b132-bbe34fa39238"
	},
	"item": [
		{
			"name": "Scenario 1",
			"item": [
				{
					"name": "Login (wrong email & pass)",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 404\", function () {\r",
									"  pm.response.to.have.status(404);\r",
									"});\r",
									"    \r",
									"const error = pm.response.json().error;\r",
									"\r",
									"pm.test (\"Returns expected error response\", () => {\r",
									"  pm.expect(error.message).to.eql(\"USER_NOT_FOUND\");\r",
									"  pm.expect(error.name).to.eql(\"NotFoundError\");\r",
									"  pm.expect(error.type).to.eql(\"server\");\r",
									"  pm.expect(error.data).to.be.null;\r",
									"  pm.expect(error.status).to.eql(404);\r",
									"  pm.expect(error.errors).to.include(\"USER_NOT_FOUND\");\r",
									"});"
								],
								"type": "text/javascript",
								"id": "02c0243d-9326-4ac4-a4a4-4df881066cbe"
							}
						}
					],
					"id": "db8b20e7-b934-4605-831f-f3153bae954f",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"email\": \"Oksana@gmail.com\",\r\n    \"password\": \"ngmgfsmsmsmgfs\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/api/login?redirect=%2F",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"login"
							],
							"query": [
								{
									"key": "redirect",
									"value": "%2F"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Login (success)",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"id": "1b77015c-a302-4cac-8799-5557301e556f"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"  pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"const response = pm.response.json()\r",
									"    \r",
									"pm.test (\"Login success\", () => {\r",
									"  pm.expect(response.email).to.eql(\"deminaon@gmail.com\");\r",
									"  pm.expect(response.username).to.eql(\"Oksana\");\r",
									"});"
								],
								"type": "text/javascript",
								"id": "a5555cc8-a773-4b41-9064-334313f73d4b"
							}
						}
					],
					"id": "588491cd-7c2f-4ac2-91ab-6f155988c104",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"email\": \"Deminaon@gmail.com\",\r\n    \"password\": \"qwerty123\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/api/login?redirect=%2F",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"login"
							],
							"query": [
								{
									"key": "redirect",
									"value": "%2F"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Password change (password is more then 20)",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 400\", function () {\r",
									"  pm.response.to.have.status(400);\r",
									"});\r",
									"\r",
									"const error = pm.response.json().error;\r",
									"\r",
									"pm.test(\"Returns expected error response\", () => {\r",
									"  pm.expect(error.message).to.eql(\"validations.invalid\");\r",
									"  pm.expect(error.name).to.eql(\"ValidationError\");\r",
									"  pm.expect(error.type).to.eql(\"server\");\r",
									"  pm.expect(error.data).to.be.null;\r",
									"  pm.expect(error.status).to.eql(400);\r",
									"  pm.expect(error.errors[0].transKey).to.eql(\"validations.maxCharLength\");\r",
									"  pm.expect(error.errors[0].field).to.eql(\"password\");\r",
									"  pm.expect(error.errors[0].params.max).to.eql(20);\r",
									"});"
								],
								"type": "text/javascript",
								"id": "e4530a13-0499-4f02-a731-b6c2cc4f2cfa"
							}
						}
					],
					"id": "dd45af5c-c828-492b-9292-5ce26f64fef0",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"password\": \"qwertyuiopasdfghjklzxcv\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/api/account/password",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"account",
								"password"
							]
						}
					},
					"response": []
				},
				{
					"name": "Password change (success)",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"  pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"const reqData = JSON.parse(request.data);\r",
									"console.log(JSON.parse(request.data));\r",
									"pm.environment.set(\"pass\", reqData.password);\r",
									"\r",
									"const response = pm.response.json();\r",
									"\r",
									"pm.test(\"Password change successful\", () => {\r",
									"  pm.expect(response.id).to.eql(3001445);  \r",
									"  pm.expect(response.email).to.eql(\"deminaon@gmail.com\");\r",
									"  pm.expect(response.username).to.eql(\"Oksana\");\r",
									"  pm.expect(response.accounts).to.be.empty;\r",
									"  pm.expect(response.isVerified).to.be.true;\r",
									"  pm.expect(response.verifyEmail).to.be.null;\r",
									"  pm.expect(response.verificationKey).to.eql(\"187571a1q0\");\r",
									"});"
								],
								"type": "text/javascript",
								"id": "2583ce69-1cf0-49c2-a8ff-ccf31c6bf959"
							}
						}
					],
					"id": "fedaf2c0-04b8-4e0e-a548-be34999f42d4",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"password\": \"{{$randomPassword}}\"\r\n}\r\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/api/account/password",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"account",
								"password"
							]
						}
					},
					"response": []
				},
				{
					"name": "Login (new password)",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"id": "c3f3e315-b8f4-4f1f-9682-7762eb91f3df"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"  pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"const response = pm.response.json()\r",
									"    \r",
									"pm.test (\"Login success\", () => {\r",
									"  pm.expect(response.email).to.eql(\"deminaon@gmail.com\");\r",
									"  pm.expect(response.username).to.eql(\"Oksana\");\r",
									"});"
								],
								"type": "text/javascript",
								"id": "c6f0f282-7e90-4f6d-9dc5-e2cc6e82e06b"
							}
						}
					],
					"id": "06115070-167d-4f85-b933-1de159eaff0e",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"email\": \"Deminaon@gmail.com\",\r\n    \"password\": \"{{pass}}\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/api/login?redirect=%2F",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"login"
							],
							"query": [
								{
									"key": "redirect",
									"value": "%2F"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Password change (revert)",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"  pm.response.to.have.status(200);\r",
									"});\r",
									""
								],
								"type": "text/javascript",
								"id": "12309819-4956-4e71-a0bd-1ecdb933cf12"
							}
						}
					],
					"id": "b236da90-02a8-4e62-891d-48a9feabf5be",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"password\": \"qwerty123\"\r\n}\r\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/api/account/password",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"account",
								"password"
							]
						}
					},
					"response": []
				}
			],
			"id": "ae1c1fa6-0591-428f-bfa9-2012e8bafdba"
		},
		{
			"name": "Homework 12.1",
			"item": [
				{
					"name": "Login",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"id": "1b77015c-a302-4cac-8799-5557301e556f"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"  pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"const response = pm.response.json()\r",
									"    \r",
									"pm.test (\"Login success\", () => {\r",
									"  pm.expect(response.email).to.eql(\"deminaon@gmail.com\");\r",
									"  pm.expect(response.username).to.eql(\"Oksana\");\r",
									"});"
								],
								"type": "text/javascript",
								"id": "a5555cc8-a773-4b41-9064-334313f73d4b"
							}
						}
					],
					"id": "73d02523-3629-4c93-9132-f4bb6c6ca7b7",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"email\": \"Deminaon@gmail.com\",\r\n    \"password\": \"qwerty123\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/api/login?redirect=%2F",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"login"
							],
							"query": [
								{
									"key": "redirect",
									"value": "%2F"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Create a box (empty name and key)",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "73226fc4-d611-47f2-bc08-7d78dae82602",
								"exec": [
									"pm.test(\"Status code is 400\", function () {\r",
									"  pm.response.to.have.status(400);\r",
									"});\r",
									"\r",
									"const error = pm.response.json().error;\r",
									"\r",
									"pm.test(\"Returns expected error response\", () => {\r",
									"  pm.expect(error.message).to.eql(\"validations.invalid\");\r",
									"  pm.expect(error.errors[0].transKey).to.eql(\"validations.required\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"id": "078c9861-328c-4390-8961-d53390cc85e4",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"email\": null,\r\n    \"name\": \"\",\r\n    \"key\": \"\",\r\n    \"picture\": \"cookie_star\",\r\n    \"usePost\": false,\r\n    \"useCashLimit\": null,\r\n    \"cashLimit\": null,\r\n    \"cashLimitCurrency\": null,\r\n    \"useWish\": false,\r\n    \"useCircleDraw\": null,\r\n    \"isInviteAfterDraw\": null,\r\n    \"isArchived\": null,\r\n    \"createAdminCard\": null,\r\n    \"isCreated\": true,\r\n    \"useNames\": false,\r\n    \"isPhoneRequired\": false,\r\n    \"logo\": null\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/api/box",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"box"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create a box",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "73226fc4-d611-47f2-bc08-7d78dae82602",
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"  pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"const reqData = JSON.parse(request.data);\r",
									"pm.environment.set(\"nameBox\", reqData.name);\r",
									"pm.environment.set(\"idBox\", reqData.key);\r",
									"\r",
									"const response = pm.response.json()\r",
									"\r",
									"pm.test (\"Create a new box\", () => {\r",
									"  pm.expect(response.box.name).to.eql(reqData.name);\r",
									"  pm.expect(response.box.key).to.eql(reqData.key);\r",
									"  pm.expect(response.box.picture).to.eql(\"cookie_star\");\r",
									"  pm.expect(response.box.usePost).to.be.false;\r",
									"  pm.expect(response.box.useCashLimit).to.be.false;\r",
									"  pm.expect(response.box.cashLimit).to.be.null;\r",
									"  pm.expect(response.box.cashLimitCurrency).to.be.null;\r",
									"  pm.expect(response.box.useWish).to.be.false;\r",
									"  pm.expect(response.box.useCircleDraw).to.be.false;\r",
									"  pm.expect(response.box.isInviteAfterDraw).to.be.false;\r",
									"  pm.expect(response.box.isArchived).to.be.false;\r",
									"  pm.expect(response.box.useNames).to.be.false;\r",
									"  pm.expect(response.box.isPhoneRequired).to.be.false;\r",
									"  pm.expect(response.box.logo).to.be.null;\r",
									"  pm.expect(response.admin.username).to.eql(\"Oksana\");\r",
									"  pm.expect(response.admin.email).to.eql(\"deminaon@gmail.com\");\r",
									"  pm.expect(response.canCreateCards).to.be.true;\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"id": "bf8b663c-e6e7-442d-823c-342370d3bcea",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"email\": null,\r\n    \"name\": \"{{$randomProductName}}\",\r\n    \"key\": \"{{$randomWord}}\",\r\n    \"picture\": \"cookie_star\",\r\n    \"usePost\": false,\r\n    \"useCashLimit\": null,\r\n    \"cashLimit\": null,\r\n    \"cashLimitCurrency\": null,\r\n    \"useWish\": false,\r\n    \"useCircleDraw\": null,\r\n    \"isInviteAfterDraw\": null,\r\n    \"isArchived\": null,\r\n    \"createAdminCard\": null,\r\n    \"isCreated\": true,\r\n    \"useNames\": false,\r\n    \"isPhoneRequired\": false,\r\n    \"logo\": null\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/api/box",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"box"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create a box with same name and key",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "73226fc4-d611-47f2-bc08-7d78dae82602",
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"  pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"const reqData = JSON.parse(request.data);\r",
									"pm.environment.set(\"nameBox\", reqData.name);\r",
									"pm.environment.set(\"idBox\", reqData.key);\r",
									"\r",
									"const response = pm.response.json()\r",
									"\r",
									"pm.test (\"Create a box with same name and key\", () => {\r",
									"  pm.expect(response.box.name).to.eql(reqData.name);\r",
									"  pm.expect(response.box.key).to.eql(reqData.key);\r",
									"  pm.expect(response.box.picture).to.eql(\"santa\");\r",
									"  pm.expect(response.box.usePost).to.be.false;\r",
									"  pm.expect(response.box.useCashLimit).to.be.false;\r",
									"  pm.expect(response.box.cashLimit).to.be.null;\r",
									"  pm.expect(response.box.cashLimitCurrency).to.be.null;\r",
									"  pm.expect(response.box.useWish).to.be.false;\r",
									"  pm.expect(response.box.useCircleDraw).to.be.false;\r",
									"  pm.expect(response.box.isInviteAfterDraw).to.be.false;\r",
									"  pm.expect(response.box.isArchived).to.be.false;\r",
									"  pm.expect(response.box.useNames).to.be.false;\r",
									"  pm.expect(response.box.isPhoneRequired).to.be.false;\r",
									"  pm.expect(response.box.logo).to.be.null;\r",
									"  pm.expect(response.admin.username).to.eql(\"Oksana\");\r",
									"  pm.expect(response.admin.email).to.eql(\"deminaon@gmail.com\");\r",
									"  pm.expect(response.canCreateCards).to.be.true;\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"id": "8f96f913-3a43-4761-9868-dad72c283749",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"email\": null,\r\n    \"name\": \"{{nameBox}}\",\r\n    \"key\": \"{{idBox}}\",\r\n    \"picture\": \"santa\",\r\n    \"usePost\": false,\r\n    \"useCashLimit\": null,\r\n    \"cashLimit\": null,\r\n    \"cashLimitCurrency\": null,\r\n    \"useWish\": false,\r\n    \"useCircleDraw\": null,\r\n    \"isInviteAfterDraw\": null,\r\n    \"isArchived\": null,\r\n    \"createAdminCard\": null,\r\n    \"isCreated\": true,\r\n    \"useNames\": false,\r\n    \"isPhoneRequired\": false,\r\n    \"logo\": null\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/api/box",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"box"
							]
						}
					},
					"response": []
				},
				{
					"name": "Edit a box",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "73226fc4-d611-47f2-bc08-7d78dae82602",
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"  pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"\r",
									"const reqData = JSON.parse(request.data);\r",
									"pm.environment.set(\"nameBox\", reqData.name);\r",
									"const response = pm.response.json()\r",
									"\r",
									"pm.test (\"Edit a box\", () => {\r",
									"  pm.expect(response.box.name).to.eql(reqData.name);\r",
									"  pm.expect(response.box.key).to.eql(reqData.key);\r",
									"  pm.expect(response.box.picture).to.eql(\"cup_cake\");\r",
									"  pm.expect(response.box.usePost).to.be.true;\r",
									"  pm.expect(response.box.useCashLimit).to.be.true;\r",
									"  pm.expect(response.box.cashLimit).to.eql(2000);\r",
									"  pm.expect(response.box.cashLimitCurrency).to.eql(\"rub\");\r",
									"  pm.expect(response.box.useWish).to.be.true;\r",
									"  pm.expect(response.box.useCircleDraw).to.be.false;\r",
									"  pm.expect(response.box.isInviteAfterDraw).to.be.false;\r",
									"  pm.expect(response.box.isArchived).to.be.false;\r",
									"  pm.expect(response.box.useNames).to.be.true;\r",
									"  pm.expect(response.box.isPhoneRequired).to.be.true;\r",
									"  pm.expect(response.box.logo).to.be.null;\r",
									"  pm.expect(response.admin.username).to.eql(\"Oksana\");\r",
									"  pm.expect(response.admin.email).to.eql(\"deminaon@gmail.com\");\r",
									"  pm.expect(response.canCreateCards).to.be.true;\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"id": "0d341d66-5f3a-4baa-a020-78129c9ff79b",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"email\": null,\r\n    \"name\": \"{{$randomProductName}}\",\r\n    \"key\": \"{{idBox}}\",\r\n    \"picture\": \"cup_cake\",\r\n    \"usePost\": true,\r\n    \"useCashLimit\": true,\r\n    \"cashLimit\": 2000,\r\n    \"cashLimitCurrency\": \"rub\",\r\n    \"useWish\": true,\r\n    \"useCircleDraw\": null,\r\n    \"isInviteAfterDraw\": null,\r\n    \"isArchived\": null,\r\n    \"createAdminCard\": null,\r\n    \"isCreated\": true,\r\n    \"useNames\": true,\r\n    \"isPhoneRequired\": true,\r\n    \"logo\": null\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/api/box",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"box"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete a box",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "73226fc4-d611-47f2-bc08-7d78dae82602",
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"  pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"//const response = pm.response.json()\r",
									"\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"id": "f8a2dd51-ced6-47e6-a00c-4be9d7ba3983",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/box/{{idBox}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"box",
								"{{idBox}}"
							]
						}
					},
					"response": []
				}
			],
			"id": "d2d7842d-b32e-4b66-892e-f9613ac6937e"
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				],
				"id": "b9744d58-b225-4a10-8051-5f7102d4c9d7"
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				],
				"id": "f16130a1-dc78-4271-b9e2-2abd3040aff5"
			}
		}
	]
}